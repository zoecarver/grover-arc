
============================================================
=== Stage Python Generator With Feedback) ===
[2025-10-01 12:55:45] Prompt:
You are trying to build a program to solve this puzzle. The puzzle is presented as a set of inputs and outputs. Your job is to 1) infer the rules of the puzzle and how to generate the correct output for any given input based on these pairs and 2) a program that represents these rules and can be applied to any of the train or test inputs.

Here is a summary of previous attempts:


Unlike the training pairs, there is no test output to compare against, so THINK about if the generated output above makes sense and looks valid. If the test output does not look valid, make sure to update the program, specifying how to produce the correct test output.

Based on this feedback, refine your program. Think about what worked and what didn't, then output an NEW and IMPROVED program. You will get many attempts to generate programs, so try NEW approaches, different from the previously generated programs. Be creative. Try out of the box approaches. Test things that you think might work.


Training Example 1 - Input
Size: 30x20
[0, 0, 0, 0, 0, 6, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5]
[0, 7, 7, 7, 0, 6, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
[0, 7, 7, 4, 0, 6, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
[0, 7, 4, 7, 0, 6, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3]
[0, 0, 0, 0, 0, 6, 5, 5, 5, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3]
[0, 0, 0, 0, 0, 6, 5, 5, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3]
[1, 1, 1, 0, 0, 6, 5, 5, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3]
[0, 0, 1, 0, 0, 6, 5, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3]
[0, 0, 1, 0, 0, 6, 5, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 3]
[0, 1, 1, 1, 0, 6, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 3]
[1, 1, 1, 1, 1, 6, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 3]
[1, 0, 1, 0, 1, 6, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 3]
[6, 6, 6, 6, 6, 6, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3]
[6, 0, 0, 0, 6, 6, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3]
[6, 0, 0, 0, 6, 6, 5, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3]
[6, 0, 0, 4, 6, 6, 5, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3]
[6, 6, 6, 6, 6, 6, 5, 5, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3]
[6, 0, 0, 0, 6, 6, 5, 5, 5, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 5]
[6, 0, 7, 0, 6, 6, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5]
[6, 0, 7, 0, 6, 6, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5]

Training Example 1 - Output
Size: 24x20
[5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5]
[5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
[5, 5, 5, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 4]
[5, 5, 5, 3, 3, 3, 3, 3, 3, 4, 4, 7, 8, 8, 8, 4, 4, 7, 8, 8, 3, 4, 4, 7]
[5, 5, 5, 3, 3, 3, 3, 3, 3, 4, 7, 4, 8, 8, 8, 4, 7, 4, 8, 8, 8, 4, 7, 4]
[5, 5, 3, 3, 3, 3, 3, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[5, 5, 3, 3, 3, 3, 8, 8, 8, 4, 4, 7, 4, 4, 7, 4, 4, 7, 4, 4, 7, 4, 4, 7]
[5, 5, 3, 3, 3, 8, 8, 8, 8, 4, 7, 4, 4, 7, 4, 4, 7, 4, 4, 7, 4, 4, 7, 4]
[5, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 3]
[5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 1, 4, 4, 7, 4, 4, 7, 4, 4, 7, 8, 8, 3]
[5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 1, 4, 7, 4, 4, 7, 4, 4, 7, 4, 8, 8, 3]
[5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 4, 4, 4, 8, 8, 8, 8, 8, 3]
[5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 8, 4, 4, 7, 8, 8, 8, 8, 8, 3]
[5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 7, 4, 8, 8, 8, 8, 3, 3]
[5, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 8, 8, 8, 8, 3, 3]
[5, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 7, 8, 8, 8, 3, 3, 3]
[5, 5, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 7, 4, 8, 8, 3, 3, 3, 3]
[5, 5, 5, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 7, 4, 4, 7, 4, 4, 7]
[5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 7, 4, 4, 7, 4, 4, 7, 4]

Colors present:
  1 = blue
  3 = green
  4 = yellow
  5 = orange
  7 = dark red
  8 = maroon
--------------------------------------------------------------------------------

Training Example 2 - Input
Size: 30x20
[0, 0, 0, 0, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 1, 1, 2, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 1, 1, 1, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 2, 1, 2, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 0, 0, 0, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 4, 0, 4, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 0, 4, 0, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 0, 4, 0, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 4, 0, 4, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 4, 0, 4, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 0, 4, 0, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[0, 0, 0, 0, 0, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[6, 4, 0, 0, 6, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[6, 0, 0, 0, 6, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[6, 0, 0, 0, 6, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[6, 0, 7, 0, 6, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[6, 0, 7, 0, 6, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[6, 0, 0, 0, 6, 6, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]

Training Example 2 - Output
Size: 24x20
[2, 2, 1, 8, 8, 9, 2, 2, 1, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[2, 2, 2, 8, 8, 9, 2, 2, 2, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[1, 2, 1, 8, 8, 9, 1, 2, 1, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 2, 2, 1, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 2, 2, 2, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 1, 2, 1, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 2, 2, 1, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 2, 2, 2, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 1, 2, 1, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[2, 2, 1, 8, 8, 9, 2, 2, 1, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[2, 2, 2, 8, 8, 9, 2, 2, 2, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[1, 2, 1, 8, 8, 9, 1, 2, 1, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[2, 2, 1, 8, 8, 9, 2, 2, 1, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[2, 2, 2, 8, 8, 9, 2, 2, 2, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[1, 2, 1, 8, 8, 9, 1, 2, 1, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 2, 2, 1, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 2, 2, 2, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 1, 2, 1, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]
[8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 8, 8, 8, 8]

Colors present:
  1 = blue
  2 = red
  8 = maroon
  9 = light blue
--------------------------------------------------------------------------------

Training Example 3 - Input
Size: 30x20
[0, 0, 0, 0, 0, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[0, 3, 3, 3, 0, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[0, 8, 3, 8, 0, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[0, 8, 3, 3, 0, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[0, 0, 0, 0, 0, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[0, 0, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 2, 2, 2, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 2, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 2, 2, 2, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 0, 0, 2, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 0, 0, 2, 0, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[0, 0, 0, 0, 0, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[6, 0, 0, 4, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[6, 0, 0, 0, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[6, 0, 0, 0, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[6, 0, 0, 0, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[6, 0, 7, 7, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[6, 0, 0, 0, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]

Training Example 3 - Output
Size: 24x20
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 8]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 8, 3, 3, 8, 3, 3, 8, 3]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 8, 8, 3, 8, 8, 3, 8, 8]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 8, 8, 5, 5, 5, 8, 8, 8]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 8, 3, 5, 5, 5, 3, 8, 3]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 8, 8, 4, 4, 4, 3, 8, 8]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 8, 8, 8]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 8, 3, 3, 8, 3, 3, 8, 3, 4, 4, 4, 3, 8, 3]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 8, 8, 3, 8, 8, 3, 8, 8, 4, 4, 4, 3, 8, 8]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]

Colors present:
  3 = green
  4 = yellow
  5 = orange
  8 = maroon
--------------------------------------------------------------------------------

Test Example 1 - Input
Size: 30x30
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 1, 1, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 1, 3, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 2, 4, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 4, 2, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 3, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 3, 3]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 3]
[0, 7, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 3, 3, 3, 3]
[7, 7, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 3, 0, 3, 0]
[7, 0, 0, 7, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 3, 3, 3, 3]
[7, 7, 7, 7, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 7, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0]
[0, 7, 7, 7, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0]
[0, 0, 0, 7, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0]
[0, 7, 7, 7, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[0, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 0]
[6, 6, 6, 6, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 6, 6, 6, 6]
[6, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 4, 0, 0, 6]
[6, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 6]
[6, 0, 0, 4, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 6]
[6, 6, 6, 6, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 6, 6, 6, 6]
[6, 0, 7, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 0, 0, 6]
[6, 0, 7, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 7, 0, 6]
[6, 0, 0, 0, 6, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 6, 0, 7, 0, 6]
--------------------------------------------------------------------------------

Test Example 2 - Input
Size: 30x30
[0, 0, 0, 0, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 2, 2, 2, 2, 2, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 2, 3, 3, 3, 3, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 2, 2, 2, 2, 2, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 3, 3, 3, 3, 2, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 2, 2, 2, 2, 2, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 4, 4, 4, 4, 4, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 4, 4, 0, 0, 4, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 4, 0, 0, 0, 4, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 4, 4, 4, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 0, 0, 0, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 0, 0, 0, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 0, 0, 0, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 0, 0, 0, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 0, 0, 0, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[0, 0, 0, 0, 0, 0, 0, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
[6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[6, 6, 0, 0, 0, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[6, 6, 0, 0, 0, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[6, 6, 4, 0, 0, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[6, 6, 0, 0, 0, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[6, 6, 7, 7, 0, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[6, 6, 0, 0, 0, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
--------------------------------------------------------------------------------





Output a python program to solve this puzzle. Avoid nested loops and nested control flow. Create one function per transformation, rule, or observation. Make sure each function is self contained. Do not output a monolithic program, instead output a program that composes individual rules. Make sure each function clearly describes what observation or rule it is handling.

REQUIRED OUTPUT:
* Define **exactly**: `def program(g: List[List[int]]) -> List[List[int]]:`
* Use only the standard library. **No I/O**, no `__main__`, no demo code.
* Output the program as text.

Other considerations:
* A sample of inputs and outputs is provided in a pretty printed format.
* This is every input that the program will be run on. 
* IMPORTANT: pay special attention to the TEST input, this is the only one that will be scored. The train inputs are just for reference.


IMPORTANT: only output the program, do not output anything else, do not output any reasoning or explanation.


